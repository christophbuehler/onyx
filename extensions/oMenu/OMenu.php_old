<?php
/**
 * Created by PhpStorm.
 * User: Christoph
 * Date: 15.02.15
 * Time: 19:08.
 */
class OMenu
{
    private $prefix;
    private $hasButtons = false;
    private $items;
    private $build = '<li class=":opened :active"><a href=":href">:title</a>:sub:btn</li>';

    public function __construct($args)
    {
      $this->prefix = $args['prefix'];
      $this->hasButtons = $args['hasButtons'];
      $this->items = $args['items'];
    }

    public function show($args)
    {
        /* $this->prefix = isset($args['prefix']) ? $args['prefix'] : '';
        $this->items = $args['items'];
        $this->build = $args['build']; */

        return $this->compose_menu($this->items, 0);
    }

    public function compose_menu($arr, $lvl)
    {
        $isActive = $this->isActive($arr[1]);

        // insert page title
        $str = str_replace(':title', $arr[0], $this->build);

        // insert link
        $str = str_replace(':link', $this->prefix . $arr[1], $str);

        // insert active status
        $str = str_replace(':active', $isActive ? 'active' : '', $str);

        // insert openend status
        $str = str_replace(':opened',    $isActive ? 'opened' : '', $str);

        if (count($arr) == 3) {
            foreach ($arr[2] as $item) {
                $str = str_replace(':sub', $this->compose_menu($item, $lvl + 1).':sub', $str);
            }
        }

        $str = str_replace(':sub', '', $str);

        return $str;
    }

    public function isActive($path)
    {
        $urlParts = explode('/', URL);
        $pathParts = explode('/', $path);

        for ($i = 0; $i < count($pathParts); ++$i) {
            if ($i == count($urlParts)) {
                return false;
            }
            if ($pathParts[$i] != $urlParts[$i]) {
                return false;
            }
        }

        return true;
    }
}
